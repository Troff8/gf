// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rank {
  ROOKIE
  BRONZE
  SILVER
  GOLD
  DIAMOND
  EMERALD
  PRO
  ADMINISTRATION
}

model Account {
  id           String  @id @default(cuid())
  userId       String  @unique
  access_token String?
}

model User {
  id           String        @id @default(cuid())
  active       Boolean       @default(true)
  nickname     String
  rank         Rank          @default(ROOKIE)
  image        String?
  tradeLink    String?
  transactions Transaction[]
  gameUser     GameUser[]
  Game         Game[]

  createdAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}

model Transaction {
  id        String   @id @default(cuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  type      String
  sum       Int
  game      Game?    @relation(fields: [gameId], references: [id])
  gameId    String?
  createdAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}

model Game {
  id           String        @id @default(cuid())
  transactions Transaction[]
  winner       User?         @relation(fields: [winnerId], references: [id])
  winnerId     String?
  gameUser     GameUser[]
  createdAt    DateTime      @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}

model GameUser {
  id     String @id @default(cuid())
  game   Game   @relation(fields: [gameId], references: [id])
  gameId String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Report {
  id          String   @id @default(cuid())
  title       String
  description String
  href        String
  userAgent   String
  createdAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}
