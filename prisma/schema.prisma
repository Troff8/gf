// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id           String  @id @default(cuid())
  userId       String  @unique
  access_token String?
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String         @id @default(cuid())
  active       Boolean        @default(true)
  nickname     String?
  image        String?
  winning      Int?
  games        Int?
  tradeLink    String?
  transactions Transactions[]
  account      Account[]

  createdAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}

model Transactions {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  type      String
  sum       String
  createdAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
  Game      Game[]
}

model Game {
  id             String       @id @default(cuid())
  transactions   Transactions @relation(fields: [transactionsId], references: [id])
  createdAt      DateTime     @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
  transactionsId String
}

model Report {
  id          String   @id @default(cuid())
  title       String
  description String
  href        String
  userAgent   String
  createdAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp()
}
